name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Doxygen:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        chmod +x utils/doxygen
      shell: bash
    - name: Validate Documentation
      run: |
        utils/doxygen .doxygen
      shell: bash

  Clang_Format:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: hypervisor
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake lld clang-format
      shell: bash
    - name: Validate Source Formatting
      run: |
        mkdir build && cd build
        cmake -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_BUILD_TYPE=DEBUG -DENABLE_CLANG_FORMAT=ON ../hypervisor
        make format
        cd ../hypervisor
        if [[ -n $(git diff) ]]; then
          echo "You must run make format before submitting a pull request"
          echo ""
          git diff
          exit -1
        fi
      shell: bash

  # Clang_Tidy:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       path: hypervisor
  #   - name: Setup
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y clang cmake lld
  #     shell: bash
  #   - name: Validate Compliance
  #     run: |
  #       chmod +x hypervisor/utils/clang-tidy
  #       export PATH="$PWD/hypervisor/utils:$PATH"

  #       sudo cp /usr/lib/llvm-10/lib/clang/10.0.0/include/limits.h /usr/local/include/
  #       sudo cp /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h /usr/local/include/
  #       sudo cp /usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h /usr/local/include/

  #       mkdir build && cd build
  #       cmake -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_BUILD_TYPE=CLANG_TIDY -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON ../hypervisor
  #       make
  #     shell: bash

  ASAN:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: hypervisor
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake lld
      shell: bash
    - name: Validate ASAN
      run: |
        mkdir build && cd build
        cmake -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_BUILD_TYPE=ASAN -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON ../hypervisor
        make
        make unittest
      shell: bash

  UBSAN:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: hypervisor
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake lld
      shell: bash
    - name: Validate UBSAN
      run: |
        mkdir build && cd build
        cmake -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_BUILD_TYPE=UBSAN -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON ../hypervisor
        make
        make unittest
      shell: bash

  Release:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: hypervisor
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake lld
      shell: bash
    - name: Validate Release Build
      run: |
        mkdir build && cd build
        cmake -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_EXAMPLES=ON ../hypervisor
        make
      shell: bash

  Debug:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: hypervisor
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake lld
      shell: bash
    - name: Validate Debug Build
      run: |
        mkdir build && cd build
        cmake -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON ../hypervisor
        make
        make unittest
      shell: bash
